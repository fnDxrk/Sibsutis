plugins {
    id 'java-library'
    id 'maven-publish'
    id("org.springframework.boot") version "3.4.3" // Spring Boot плагин
    id("io.spring.dependency-management") version "1.1.7" // Управление зависимостями
}

group = 'org.openapitools'
version = '3.2.0'
description = 'openapi-spring'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    mavenCentral() // Используем Maven Central для зависимостей
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    // Spring Boot зависимости (версии управляются плагином)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.data:spring-data-commons'

    // OpenAPI и Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // PostgresSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Тестирование
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

    implementation 'org.liquibase:liquibase-core'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useJUnitPlatform()
}