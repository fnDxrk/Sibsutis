def karatsuba(x, y):
    str_x = str(x)
    str_y = str(y)

    n = max(len(str_x), len(str_y))

    if n == 1:
        return x * y

    half_n = n // 2

    x1 = x // 10**half_n
    x0 = x % 10**half_n
    y1 = y // 10**half_n
    y0 = y % 10**half_n

    z0 = karatsuba(x0, y0)            # x0 * y0
    z1 = karatsuba(x1, y1)            # x1 * y1
    z2 = karatsuba(x1 + x0, y1 + y0)  # (x1 + x0) * (y1 + y0)

    return z1 * 10**(2 * half_n) + (z2 - z1 - z0) * 10**half_n + z0

x = 1234
y = 5678
result = karatsuba(x, y)
print(f"Результат умножения {x} и {y}: {result}")

# Метод Карацубы позволяет умножать большие числа, разбивая их на части и уменьшая количество операций умножения
# Он использует рекурсивный подход, выполняя только три умножения вместо четырех и собирает результат на основе промежуточных произведений

# Определяется максимальная длина чисел, чтобы разделить их на 2 части
# Если длина числа равна 1, производится обычное умножение
# В противном случае, числа делятся на 2 части, и рекурсивно вызываются для получения необходимых произведений
# Результаты собираются в итоговое значение